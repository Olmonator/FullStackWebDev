{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OlmoLecht\\\\Documents\\\\FullStackWebDev\\\\part9\\\\patientor\\\\src\\\\components\\\\EntryDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { apiBaseUrl } from \"../constants\";\nimport { setDiagnosisList, useStateValue } from \"../state\";\nimport { EntryType } from \"../types\";\nimport { EntryBase } from \"./Entries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst heart = rating => {\n  switch (rating) {\n    case 0:\n      return /*#__PURE__*/_jsxDEV(Icon, {\n        name: \"heart\",\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this);\n\n    case 1:\n      return /*#__PURE__*/_jsxDEV(Icon, {\n        name: \"heart\",\n        color: \"yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n\n    case 2:\n      return /*#__PURE__*/_jsxDEV(Icon, {\n        name: \"heart\",\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this);\n\n    case 3:\n      return /*#__PURE__*/_jsxDEV(Icon, {\n        name: \"heart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" error \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n  }\n};\n\nconst divStyle = {\n  border: '1px solid rgba(0, 0, 0, 0.05)',\n  borderRadius: 5,\n  paddingTop: 5,\n  paddingBottom: 5,\n  paddingLeft: 10,\n  marginBottom: 10\n};\n\nconst EntryDetails = ({\n  entry\n}) => {\n  _s();\n\n  const [{\n    diagnoses\n  }, dispatch] = useStateValue();\n\n  if (diagnoses.length === 0) {\n    console.log('fetching diagnoses ENTRY: ', entry);\n    React.useEffect(() => {\n      const fetchDiagnosisCodes = async () => {\n        try {\n          const {\n            data: diagnosesFromApi\n          } = await axios.get(`${apiBaseUrl}/diagnoses`);\n          dispatch(setDiagnosisList(diagnosesFromApi));\n        } catch (e) {\n          console.error(e);\n        }\n      };\n\n      void fetchDiagnosisCodes();\n    }, [dispatch]);\n  }\n\n  switch (entry.type) {\n    case EntryType.Hospital:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: divStyle,\n        children: /*#__PURE__*/_jsxDEV(EntryBase, {\n          entry: entry,\n          diagnoses: diagnoses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n\n    case EntryType.HealthCheck:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: divStyle,\n        children: [/*#__PURE__*/_jsxDEV(EntryBase, {\n          entry: entry,\n          diagnoses: diagnoses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), heart(entry.healthCheckRating)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this);\n\n    case EntryType.OccupationalHealthcare:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: divStyle,\n        children: /*#__PURE__*/_jsxDEV(EntryBase, {\n          entry: entry,\n          diagnoses: diagnoses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this);\n  }\n};\n\n_s(EntryDetails, \"eiltHEVt6J2BcpPIQxSwIzZmzas=\", false, function () {\n  return [useStateValue];\n});\n\n_c = EntryDetails;\nexport default EntryDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntryDetails\");","map":{"version":3,"sources":["C:/Users/OlmoLecht/Documents/FullStackWebDev/part9/patientor/src/components/EntryDetails.tsx"],"names":["axios","React","Icon","apiBaseUrl","setDiagnosisList","useStateValue","EntryType","EntryBase","heart","rating","divStyle","border","borderRadius","paddingTop","paddingBottom","paddingLeft","marginBottom","EntryDetails","entry","diagnoses","dispatch","length","console","log","useEffect","fetchDiagnosisCodes","data","diagnosesFromApi","get","e","error","type","Hospital","HealthCheck","healthCheckRating","OccupationalHealthcare"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { apiBaseUrl } from \"../constants\";\r\nimport { setDiagnosisList, useStateValue } from \"../state\";\r\nimport { Diagnosis, Entry, EntryType } from \"../types\";\r\n\r\nimport { EntryBase } from \"./Entries\";\r\n\r\nconst heart = (rating: number): JSX.Element => {\r\n  switch (rating) {\r\n    case 0:\r\n      return (\r\n        <Icon name='heart' color=\"green\" />\r\n      );\r\n    case 1:\r\n      return (\r\n        <Icon name='heart' color=\"yellow\" />\r\n      );\r\n    case 2:\r\n      return (\r\n        <Icon name='heart' color=\"red\" />\r\n      );\r\n    case 3:\r\n      return (\r\n        <Icon name='heart'/>\r\n      );\r\n    default:\r\n      return (\r\n        <p> error </p>\r\n      );\r\n  }\r\n};\r\n\r\nconst divStyle = {\r\n  border: '1px solid rgba(0, 0, 0, 0.05)',\r\n  borderRadius: 5,\r\n  paddingTop: 5,\r\n  paddingBottom: 5,\r\n  paddingLeft: 10,\r\n  marginBottom: 10,\r\n};\r\n\r\nconst EntryDetails = ({ entry } : { entry: Entry }): JSX.Element => {\r\n  const [{ diagnoses }, dispatch] = useStateValue();\r\n  \r\n  if (diagnoses.length === 0) {\r\n    console.log('fetching diagnoses ENTRY: ', entry);\r\n    React.useEffect(() => {\r\n      const fetchDiagnosisCodes = async () => {\r\n        try {\r\n          const { data: diagnosesFromApi } = await axios.get<Diagnosis[]>(\r\n            `${apiBaseUrl}/diagnoses`\r\n          );\r\n  \r\n          dispatch(setDiagnosisList(diagnosesFromApi));\r\n        } catch (e) {\r\n          console.error(e);\r\n        }\r\n      };\r\n      void fetchDiagnosisCodes();\r\n    }, [dispatch]);\r\n  }\r\n  switch(entry.type){\r\n    case EntryType.Hospital:\r\n      return (\r\n        <div style={divStyle}>\r\n          <EntryBase entry={entry} diagnoses={diagnoses} />\r\n        </div>\r\n      );\r\n    case EntryType.HealthCheck:\r\n      return (\r\n        <div style={divStyle}>\r\n          <EntryBase entry={entry} diagnoses={diagnoses}/>\r\n          {heart(entry.healthCheckRating)}\r\n        </div>\r\n      );\r\n    case EntryType.OccupationalHealthcare:\r\n      return (\r\n        <div style={divStyle}>\r\n          <EntryBase entry={entry} diagnoses={diagnoses} />\r\n        </div>\r\n      );\r\n    default:\r\n      return (\r\n        <div>\r\n          Error\r\n        </div>\r\n      );\r\n  }\r\n};\r\n\r\nexport default EntryDetails;"]},"metadata":{},"sourceType":"module"}