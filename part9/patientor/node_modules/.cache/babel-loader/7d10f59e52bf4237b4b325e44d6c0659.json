{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OlmoLecht\\\\Documents\\\\FullStackWebDev\\\\part9\\\\patientor\\\\src\\\\PatientListPage\\\\PatientListing.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport { apiBaseUrl } from \"../constants\";\nimport { createEntry, useStateValue, setPatient } from \"../state\";\nimport EntryDetails from \"../components/EntryDetails\";\nimport AddEntryModal from \"../AddEntryModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst [modalOpen, setModalOpen] = React.useState(false);\nconst [error, setError] = React.useState();\n\nconst openModal = () => setModalOpen(true);\n\nconst closeModal = () => {\n  setModalOpen(false);\n  setError(undefined);\n};\n\nconst submitNewEntry = async values => {\n  try {\n    const {\n      data: newEntry\n    } = await axios.post(`${apiBaseUrl}/patients`, values);\n    dispatch(createEntry(newEntry));\n    closeModal();\n  } catch (e) {\n    var _e$response, _e$response2, _e$response2$data;\n\n    console.error(((_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.data) || 'Unknown Error');\n    setError(((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.error) || 'Unknown error');\n  }\n};\n\nconst PatientListing = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [{\n    patient\n  }, dispatch] = useStateValue();\n\n  if (!patient || patient.id !== id) {\n    console.log('fetching patient data');\n    React.useEffect(() => {\n      const fetchPatient = async () => {\n        try {\n          const {\n            data: patientFromApi\n          } = await axios.get(`${apiBaseUrl}/patients/${id}`);\n          dispatch(setPatient(patientFromApi));\n        } catch (e) {\n          console.error(e);\n        }\n      };\n\n      void fetchPatient();\n    }, [dispatch]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        loading: true,\n        name: \"spinner\",\n        size: \"big\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [patient.name, patient.gender === 'male' ? /*#__PURE__*/_jsxDEV(Icon, {\n        name: \"mars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 38\n      }, this) : null, patient.gender === 'female' ? /*#__PURE__*/_jsxDEV(Icon, {\n        name: \"venus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 40\n      }, this) : null, patient.gender === 'other' ? /*#__PURE__*/_jsxDEV(Icon, {\n        name: \"transgender alternate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 39\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"ssn: \", patient.ssn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"occupation: \", patient.occupation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), patient.entries.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"entries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), patient.entries.map(entry => /*#__PURE__*/_jsxDEV(EntryDetails, {\n        entry: entry\n      }, entry.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(AddEntryModal, {\n      modalOpen: modalOpen,\n      onSubmit: submitNewEntry,\n      error: error,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => openModal(),\n      children: \"Add New Patient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PatientListing, \"0Resu/9tw6DGUqtUV19E3eYGefg=\", false, function () {\n  return [useParams, useStateValue];\n});\n\n_c = PatientListing;\nexport default PatientListing;\n\nfunction dispatch(arg0) {\n  throw new Error(\"Function not implemented.\");\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientListing\");","map":{"version":3,"sources":["C:/Users/OlmoLecht/Documents/FullStackWebDev/part9/patientor/src/PatientListPage/PatientListing.tsx"],"names":["axios","React","useParams","Button","Icon","apiBaseUrl","createEntry","useStateValue","setPatient","EntryDetails","AddEntryModal","modalOpen","setModalOpen","useState","error","setError","openModal","closeModal","undefined","submitNewEntry","values","data","newEntry","post","dispatch","e","console","response","PatientListing","id","patient","log","useEffect","fetchPatient","patientFromApi","get","name","gender","ssn","occupation","entries","length","map","entry","arg0","Error"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,UAArC,QAAuD,UAAvD;AAEA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;;;AAGA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,KAAK,CAACY,QAAN,CAAwB,KAAxB,CAAlC;AACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,KAAK,CAACY,QAAN,EAA1B;;AAEA,MAAMG,SAAS,GAAG,MAAYJ,YAAY,CAAC,IAAD,CAA1C;;AAEA,MAAMK,UAAU,GAAG,MAAY;AAC7BL,EAAAA,YAAY,CAAC,KAAD,CAAZ;AACAG,EAAAA,QAAQ,CAACG,SAAD,CAAR;AACD,CAHD;;AAKA,MAAMC,cAAc,GAAG,MAAOC,MAAP,IAAmC;AACxD,MAAI;AACF,UAAM;AAAEC,MAAAA,IAAI,EAAEC;AAAR,QAAqB,MAAMtB,KAAK,CAACuB,IAAN,CAC9B,GAAElB,UAAW,WADiB,EAE/Be,MAF+B,CAAjC;AAIAI,IAAAA,QAAQ,CAAClB,WAAW,CAACgB,QAAD,CAAZ,CAAR;AACAL,IAAAA,UAAU;AACX,GAPD,CAOE,OAAOQ,CAAP,EAAU;AAAA;;AACVC,IAAAA,OAAO,CAACZ,KAAR,CAAc,gBAAAW,CAAC,CAACE,QAAF,4DAAYN,IAAZ,KAAoB,eAAlC;AACAN,IAAAA,QAAQ,CAAC,iBAAAU,CAAC,CAACE,QAAF,mFAAYN,IAAZ,wEAAkBP,KAAlB,KAA2B,eAA5B,CAAR;AACD;AACF,CAZD;;AAcA,MAAMc,cAAc,GAAG,MAAmB;AAAA;;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAS3B,SAAS,EAAxB;AACA,QAAM,CAAC;AAAE4B,IAAAA;AAAF,GAAD,EAAcN,QAAd,IAA0BjB,aAAa,EAA7C;;AAEA,MAAI,CAACuB,OAAD,IAAYA,OAAO,CAACD,EAAR,KAAeA,EAA/B,EAAmC;AACjCH,IAAAA,OAAO,CAACK,GAAR,CAAY,uBAAZ;AACA9B,IAAAA,KAAK,CAAC+B,SAAN,CAAgB,MAAM;AACpB,YAAMC,YAAY,GAAG,YAAY;AAC/B,YAAI;AACF,gBAAM;AAAEZ,YAAAA,IAAI,EAAEa;AAAR,cAA2B,MAAMlC,KAAK,CAACmC,GAAN,CACpC,GAAE9B,UAAW,aAAYwB,EAAG,EADQ,CAAvC;AAGAL,UAAAA,QAAQ,CAAChB,UAAU,CAAC0B,cAAD,CAAX,CAAR;AACD,SALD,CAKE,OAAOT,CAAP,EAAU;AACVC,UAAAA,OAAO,CAACZ,KAAR,CAAcW,CAAd;AACD;AACF,OATD;;AAUA,WAAKQ,YAAY,EAAjB;AACD,KAZD,EAYG,CAACT,QAAD,CAZH;AAaA,wBACE;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,OAAO,MAAb;AAAc,QAAA,IAAI,EAAC,SAAnB;AAA6B,QAAA,IAAI,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE;AAAA,4BACE;AAAA,iBACGM,OAAO,CAACM,IADX,EAGGN,OAAO,CAACO,MAAR,KAAmB,MAAnB,gBAA4B,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cAA5B,GAAmD,IAHtD,EAIGP,OAAO,CAACO,MAAR,KAAmB,QAAnB,gBAA8B,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cAA9B,GAAsD,IAJzD,EAKGP,OAAO,CAACO,MAAR,KAAmB,OAAnB,gBAA6B,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cAA7B,GAAqE,IALxE;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAA,0BACQP,OAAO,CAACQ,GADhB;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAYE;AAAA,iCACeR,OAAO,CAACS,UADvB;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,EAeGT,OAAO,CAACU,OAAR,CAAgBC,MAAhB,GAAyB,CAAzB,gBACG;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGX,OAAO,CAACU,OAAR,CAAgBE,GAAhB,CAAoBC,KAAK,iBACxB,QAAC,YAAD;AAA6B,QAAA,KAAK,EAAEA;AAApC,SAAmBA,KAAK,CAACd,EAAzB;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA,oBADH,GAOG,IAtBN,eAwBE,QAAC,aAAD;AACE,MAAA,SAAS,EAAElB,SADb;AAEE,MAAA,QAAQ,EAAEQ,cAFZ;AAGE,MAAA,KAAK,EAAEL,KAHT;AAIE,MAAA,OAAO,EAAEG;AAJX;AAAA;AAAA;AAAA;AAAA,YAxBF,eA8BE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMD,SAAS,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CA5DD;;GAAMY,c;UACW1B,S,EACiBK,a;;;KAF5BqB,c;AA8DN,eAAeA,cAAf;;AAEA,SAASJ,QAAT,CAAkBoB,IAAlB,EAAgC;AAC9B,QAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD","sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { apiBaseUrl } from \"../constants\";\r\nimport { createEntry, useStateValue, setPatient } from \"../state\";\r\nimport { Entry, Patient } from \"../types\";\r\nimport EntryDetails from \"../components/EntryDetails\";\r\nimport AddEntryModal from \"../AddEntryModal\";\r\nimport { EntryFormValues } from \"../AddEntryModal/AddEntryForm\";\r\n\r\nconst [modalOpen, setModalOpen] = React.useState<boolean>(false);\r\nconst [error, setError] = React.useState<string | undefined>();\r\n\r\nconst openModal = (): void => setModalOpen(true);\r\n\r\nconst closeModal = (): void => {\r\n  setModalOpen(false);\r\n  setError(undefined);\r\n};\r\n\r\nconst submitNewEntry = async (values: EntryFormValues) => {\r\n  try {\r\n    const { data: newEntry } = await axios.post<Entry>(\r\n      `${apiBaseUrl}/patients`,\r\n      values\r\n    );\r\n    dispatch(createEntry(newEntry));\r\n    closeModal();\r\n  } catch (e) {\r\n    console.error(e.response?.data || 'Unknown Error');\r\n    setError(e.response?.data?.error || 'Unknown error');\r\n  }\r\n};\r\n\r\nconst PatientListing = (): JSX.Element => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const [{ patient }, dispatch] = useStateValue();\r\n\r\n  if (!patient || patient.id !== id) {\r\n    console.log('fetching patient data');\r\n    React.useEffect(() => {\r\n      const fetchPatient = async () => {\r\n        try {\r\n          const { data: patientFromApi } = await axios.get<Patient>(\r\n            `${apiBaseUrl}/patients/${id}`\r\n          );\r\n          dispatch(setPatient(patientFromApi));\r\n        } catch (e) {\r\n          console.error(e);\r\n        }\r\n      };\r\n      void fetchPatient();\r\n    }, [dispatch]); \r\n    return (\r\n      <div>\r\n        <Icon loading name='spinner' size='big' />\r\n      </div>\r\n    );\r\n  }\r\n   \r\n  return (\r\n    <div>\r\n      <h2>\r\n        {patient.name} \r\n        \r\n        {patient.gender === 'male' ? <Icon name='mars' /> : null}\r\n        {patient.gender === 'female' ? <Icon name='venus' /> : null}\r\n        {patient.gender === 'other' ? <Icon name='transgender alternate' /> : null}\r\n      </h2>\r\n      \r\n      <p>\r\n        ssn: {patient.ssn}\r\n      </p>\r\n      <p>\r\n        occupation: {patient.occupation}\r\n      </p>\r\n      {patient.entries.length > 0\r\n        ? <>\r\n            <h4>entries</h4>\r\n            {patient.entries.map(entry =>\r\n              <EntryDetails key={entry.id} entry={entry} />\r\n            )}\r\n          </>\r\n        : null\r\n      }\r\n      <AddEntryModal\r\n        modalOpen={modalOpen}\r\n        onSubmit={submitNewEntry}\r\n        error={error}\r\n        onClose={closeModal}\r\n      />\r\n      <Button onClick={() => openModal()}>Add New Patient</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientListing;\r\n\r\nfunction dispatch(arg0: Action) {\r\n  throw new Error(\"Function not implemented.\");\r\n}\r\n"]},"metadata":{},"sourceType":"module"}