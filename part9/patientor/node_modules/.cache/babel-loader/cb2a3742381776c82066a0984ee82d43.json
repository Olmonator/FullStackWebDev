{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OlmoLecht\\\\Documents\\\\FullStackWebDev\\\\part9\\\\patientor\\\\src\\\\PatientListPage\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Container, Table, Button } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport AddPatientModal from \"../AddPatientModal\";\nimport { apiBaseUrl } from \"../constants\";\nimport HealthRatingBar from \"../components/HealthRatingBar\";\nimport { useStateValue } from \"../state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PatientListPage = () => {\n  _s();\n\n  const [{\n    patients\n  }, dispatch] = useStateValue();\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [error, setError] = React.useState();\n\n  const openModal = () => setModalOpen(true);\n\n  const closeModal = () => {\n    setModalOpen(false);\n    setError(undefined);\n  };\n\n  const submitNewPatient = async values => {\n    try {\n      const {\n        data: newPatient\n      } = await axios.post(`${apiBaseUrl}/patients`, values);\n      dispatch({\n        type: \"ADD_PATIENT\",\n        payload: newPatient\n      });\n      closeModal();\n    } catch (e) {\n      var _e$response, _e$response2, _e$response2$data;\n\n      console.error(((_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.data) || 'Unknown Error');\n      setError(((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.error) || 'Unknown error');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      textAlign: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Patient list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      celled: true,\n      children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Occupation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Health Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        children: Object.values(patients).map(patient => /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/patients/`,\n              children: patient.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: patient.gender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: patient.occupation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: /*#__PURE__*/_jsxDEV(HealthRatingBar, {\n              showText: false,\n              rating: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, patient.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPatientModal, {\n      modalOpen: modalOpen,\n      onSubmit: submitNewPatient,\n      error: error,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => openModal(),\n      children: \"Add New Patient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PatientListPage, \"sFdFEyjswPcHtYxff3i7gIc9rwM=\", false, function () {\n  return [useStateValue];\n});\n\n_c = PatientListPage;\nexport default PatientListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientListPage\");","map":{"version":3,"sources":["C:/Users/OlmoLecht/Documents/FullStackWebDev/part9/patientor/src/PatientListPage/index.tsx"],"names":["React","axios","Container","Table","Button","Link","AddPatientModal","apiBaseUrl","HealthRatingBar","useStateValue","PatientListPage","patients","dispatch","modalOpen","setModalOpen","useState","error","setError","openModal","closeModal","undefined","submitNewPatient","values","data","newPatient","post","type","payload","e","console","response","Object","map","patient","name","gender","occupation","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,MAA3B,QAAyC,mBAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAGA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,SAASC,aAAT,QAA8B,UAA9B;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAeC,QAAf,IAA2BH,aAAa,EAA9C;AAEA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4Bd,KAAK,CAACe,QAAN,CAAwB,KAAxB,CAAlC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,KAAK,CAACe,QAAN,EAA1B;;AAEA,QAAMG,SAAS,GAAG,MAAYJ,YAAY,CAAC,IAAD,CAA1C;;AAEA,QAAMK,UAAU,GAAG,MAAY;AAC7BL,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAG,IAAAA,QAAQ,CAACG,SAAD,CAAR;AACD,GAHD;;AAKA,QAAMC,gBAAgB,GAAG,MAAOC,MAAP,IAAqC;AAC5D,QAAI;AACF,YAAM;AAAEC,QAAAA,IAAI,EAAEC;AAAR,UAAuB,MAAMvB,KAAK,CAACwB,IAAN,CAChC,GAAElB,UAAW,WADmB,EAEjCe,MAFiC,CAAnC;AAIAV,MAAAA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,OAAO,EAAEH;AAAhC,OAAD,CAAR;AACAL,MAAAA,UAAU;AACX,KAPD,CAOE,OAAOS,CAAP,EAAU;AAAA;;AACVC,MAAAA,OAAO,CAACb,KAAR,CAAc,gBAAAY,CAAC,CAACE,QAAF,4DAAYP,IAAZ,KAAoB,eAAlC;AACAN,MAAAA,QAAQ,CAAC,iBAAAW,CAAC,CAACE,QAAF,mFAAYP,IAAZ,wEAAkBP,KAAlB,KAA2B,eAA5B,CAAR;AACD;AACF,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,QAArB;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,KAAD;AAAO,MAAA,MAAM,MAAb;AAAA,8BACE,QAAC,KAAD,CAAO,MAAP;AAAA,+BACE,QAAC,KAAD,CAAO,GAAP;AAAA,kCACE,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,KAAD,CAAO,IAAP;AAAA,kBACGe,MAAM,CAACT,MAAP,CAAcX,QAAd,EAAwBqB,GAAxB,CAA6BC,OAAD,iBAC3B,QAAC,KAAD,CAAO,GAAP;AAAA,kCACE,QAAC,KAAD,CAAO,IAAP;AAAA,mCAAY,QAAC,IAAD;AAAM,cAAA,EAAE,EAAG,YAAX;AAAA,wBAAyBA,OAAO,CAACC;AAAjC;AAAA;AAAA;AAAA;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD,CAAO,IAAP;AAAA,sBAAaD,OAAO,CAACE;AAArB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD,CAAO,IAAP;AAAA,sBAAaF,OAAO,CAACG;AAArB;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAA,mCACE,QAAC,eAAD;AAAiB,cAAA,QAAQ,EAAE,KAA3B;AAAkC,cAAA,MAAM,EAAE;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAAgBH,OAAO,CAACI,EAAxB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eA0BE,QAAC,eAAD;AACE,MAAA,SAAS,EAAExB,SADb;AAEE,MAAA,QAAQ,EAAEQ,gBAFZ;AAGE,MAAA,KAAK,EAAEL,KAHT;AAIE,MAAA,OAAO,EAAEG;AAJX;AAAA;AAAA;AAAA;AAAA,YA1BF,eAgCE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMD,SAAS,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CA/DD;;GAAMR,e;UAC6BD,a;;;KAD7BC,e;AAiEN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Table, Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { PatientFormValues } from \"../AddPatientModal/AddPatientForm\";\r\nimport AddPatientModal from \"../AddPatientModal\";\r\nimport { Patient } from \"../types\";\r\nimport { apiBaseUrl } from \"../constants\";\r\nimport HealthRatingBar from \"../components/HealthRatingBar\";\r\nimport { useStateValue } from \"../state\";\r\n\r\nconst PatientListPage = () => {\r\n  const [{ patients }, dispatch] = useStateValue();\r\n\r\n  const [modalOpen, setModalOpen] = React.useState<boolean>(false);\r\n  const [error, setError] = React.useState<string | undefined>();\r\n\r\n  const openModal = (): void => setModalOpen(true);\r\n\r\n  const closeModal = (): void => {\r\n    setModalOpen(false);\r\n    setError(undefined);\r\n  };\r\n\r\n  const submitNewPatient = async (values: PatientFormValues) => {\r\n    try {\r\n      const { data: newPatient } = await axios.post<Patient>(\r\n        `${apiBaseUrl}/patients`,\r\n        values\r\n      );\r\n      dispatch({ type: \"ADD_PATIENT\", payload: newPatient });\r\n      closeModal();\r\n    } catch (e) {\r\n      console.error(e.response?.data || 'Unknown Error');\r\n      setError(e.response?.data?.error || 'Unknown error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Container textAlign=\"center\">\r\n        <h3>Patient list</h3>\r\n      </Container>\r\n      <Table celled>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>Name</Table.HeaderCell>\r\n            <Table.HeaderCell>Gender</Table.HeaderCell>\r\n            <Table.HeaderCell>Occupation</Table.HeaderCell>\r\n            <Table.HeaderCell>Health Rating</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {Object.values(patients).map((patient: Patient) => (\r\n            <Table.Row key={patient.id}>\r\n              <Table.Cell><Link to={`/patients/`}>{patient.name}</Link></Table.Cell>\r\n              <Table.Cell>{patient.gender}</Table.Cell>\r\n              <Table.Cell>{patient.occupation}</Table.Cell>\r\n              <Table.Cell>\r\n                <HealthRatingBar showText={false} rating={1} />\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          ))}\r\n        </Table.Body>\r\n      </Table>\r\n      <AddPatientModal\r\n        modalOpen={modalOpen}\r\n        onSubmit={submitNewPatient}\r\n        error={error}\r\n        onClose={closeModal}\r\n      />\r\n      <Button onClick={() => openModal()}>Add New Patient</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientListPage;\r\n"]},"metadata":{},"sourceType":"module"}