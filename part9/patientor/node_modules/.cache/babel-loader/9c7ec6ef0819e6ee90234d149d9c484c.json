{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OlmoLecht\\\\Documents\\\\FullStackWebDev\\\\part9\\\\patientor\\\\src\\\\components\\\\EntryDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport { apiBaseUrl } from \"../constants\";\nimport DiagnosisList from \"../PatientListPage/DiagnosesList\";\nimport { setDiagnosisList, useStateValue } from \"../state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EntryDetails = ({\n  entry\n}) => {\n  _s();\n\n  const [{\n    diagnoses\n  }, dispatch] = useStateValue();\n\n  if (diagnoses.length === 0) {\n    React.useEffect(() => {\n      const fetchDiagnosisCodes = async () => {\n        try {\n          const {\n            data: diagnosesFromApi\n          } = await axios.get(`${apiBaseUrl}/diagnoses`);\n          dispatch(setDiagnosisList(diagnosesFromApi));\n        } catch (e) {\n          console.error(e);\n        }\n      };\n\n      void fetchDiagnosisCodes();\n    }, [dispatch]);\n  }\n\n  switch (entry.type) {\n    case 'Hospital':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: entry.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n\n    case 'HealthCheck':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: entry.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n\n    case 'OccupationalHealthcare':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: entry.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [entry.date, \": \", entry.description, !entry.diagnosisCodes ? null : !diagnoses ? /*#__PURE__*/_jsxDEV(Icon, {\n      loading: true,\n      name: \"spinner\",\n      size: \"big\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(DiagnosisList, {\n      diagnoses: diagnoses,\n      codes: entry.diagnosisCodes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 18\n    }, this)]\n  }, entry.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EntryDetails, \"eiltHEVt6J2BcpPIQxSwIzZmzas=\", false, function () {\n  return [useStateValue];\n});\n\n_c = EntryDetails;\nexport default EntryDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntryDetails\");","map":{"version":3,"sources":["C:/Users/OlmoLecht/Documents/FullStackWebDev/part9/patientor/src/components/EntryDetails.tsx"],"names":["axios","React","Icon","apiBaseUrl","DiagnosisList","setDiagnosisList","useStateValue","EntryDetails","entry","diagnoses","dispatch","length","useEffect","fetchDiagnosisCodes","data","diagnosesFromApi","get","e","console","error","type","date","description","diagnosisCodes","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,UAAhD;;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA+C;AAAA;;AAClE,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAgBC,QAAhB,IAA4BJ,aAAa,EAA/C;;AAEA,MAAIG,SAAS,CAACE,MAAV,KAAqB,CAAzB,EAA4B;AAC1BV,IAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpB,YAAMC,mBAAmB,GAAG,YAAY;AACtC,YAAI;AACF,gBAAM;AAAEC,YAAAA,IAAI,EAAEC;AAAR,cAA6B,MAAMf,KAAK,CAACgB,GAAN,CACtC,GAAEb,UAAW,YADyB,CAAzC;AAIAO,UAAAA,QAAQ,CAACL,gBAAgB,CAACU,gBAAD,CAAjB,CAAR;AACD,SAND,CAME,OAAOE,CAAP,EAAU;AACVC,UAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,OAVD;;AAWA,WAAKJ,mBAAmB,EAAxB;AACD,KAbD,EAaG,CAACH,QAAD,CAbH;AAcD;;AACD,UAAOF,KAAK,CAACY,IAAb;AACE,SAAK,UAAL;AACE,0BACE;AAAA,kBACGZ,KAAK,CAACY;AADT;AAAA;AAAA;AAAA;AAAA,cADF;;AAKF,SAAK,aAAL;AACE,0BACE;AAAA,kBACGZ,KAAK,CAACY;AADT;AAAA;AAAA;AAAA;AAAA,cADF;;AAKF,SAAK,wBAAL;AACE,0BACE;AAAA,kBACGZ,KAAK,CAACY;AADT;AAAA;AAAA;AAAA;AAAA,cADF;;AAKF;AACE,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AApBJ;;AA0BA,sBACE;AAAA,eACOZ,KAAK,CAACa,IADb,QACqBb,KAAK,CAACc,WAD3B,EAEO,CAACd,KAAK,CAACe,cAAP,GACG,IADH,GAEG,CAACd,SAAD,gBACG,QAAC,IAAD;AAAM,MAAA,OAAO,MAAb;AAAc,MAAA,IAAI,EAAC,SAAnB;AAA6B,MAAA,IAAI,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,YADH,gBAEG,QAAC,aAAD;AAAe,MAAA,SAAS,EAAEA,SAA1B;AAAqC,MAAA,KAAK,EAAED,KAAK,CAACe;AAAlD;AAAA;AAAA;AAAA;AAAA,YANb;AAAA,KAAUf,KAAK,CAACgB,EAAhB;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAxDD;;GAAMjB,Y;UAC8BD,a;;;KAD9BC,Y;AA0DN,eAAeA,YAAf","sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { apiBaseUrl } from \"../constants\";\r\nimport DiagnosisList from \"../PatientListPage/DiagnosesList\";\r\nimport { setDiagnosisList, useStateValue } from \"../state\";\r\nimport { Diagnosis, Entry } from \"../types\";\r\n\r\nconst EntryDetails = ({ entry } : { entry: Entry }): JSX.Element => {\r\n  const [{ diagnoses }, dispatch] = useStateValue();\r\n  \r\n  if (diagnoses.length === 0) {\r\n    React.useEffect(() => {\r\n      const fetchDiagnosisCodes = async () => {\r\n        try {\r\n          const { data: diagnosesFromApi } = await axios.get<Diagnosis[]>(\r\n            `${apiBaseUrl}/diagnoses`\r\n          );\r\n  \r\n          dispatch(setDiagnosisList(diagnosesFromApi));\r\n        } catch (e) {\r\n          console.error(e);\r\n        }\r\n      };\r\n      void fetchDiagnosisCodes();\r\n    }, [dispatch]);\r\n  }\r\n  switch(entry.type){\r\n    case 'Hospital':\r\n      return (\r\n        <div>\r\n          {entry.type}\r\n        </div>\r\n      );\r\n    case 'HealthCheck':\r\n      return (\r\n        <div>\r\n          {entry.type}\r\n        </div>\r\n      );\r\n    case 'OccupationalHealthcare':\r\n      return (\r\n        <div>\r\n          {entry.type}\r\n        </div>\r\n      );\r\n    default:\r\n      return (\r\n        <div>\r\n          Error\r\n        </div>\r\n      );\r\n  }\r\n  return (\r\n    <div key={entry.id}>\r\n          {entry.date}: {entry.description}\r\n          {!entry.diagnosisCodes\r\n            ? null\r\n            : !diagnoses \r\n              ?  <Icon loading name='spinner' size='big' /> \r\n              :  <DiagnosisList diagnoses={diagnoses} codes={entry.diagnosisCodes} />\r\n          }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EntryDetails;"]},"metadata":{},"sourceType":"module"}