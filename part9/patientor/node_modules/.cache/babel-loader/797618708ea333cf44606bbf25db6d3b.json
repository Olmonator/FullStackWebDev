{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OlmoLecht\\\\Documents\\\\FullStackWebDev\\\\part9\\\\patientor\\\\src\\\\AddPatientModal\\\\FormField.tsx\";\nimport React from \"react\";\nimport { ErrorMessage, Field } from \"formik\";\nimport { Dropdown, Form } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectField = ({\n  name,\n  label,\n  options\n}) => /*#__PURE__*/_jsxDEV(Form.Field, {\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Field, {\n    as: \"select\",\n    name: name,\n    className: \"ui dropdown\",\n    children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option.value,\n      children: option.label || option.value\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 3\n}, this);\n_c = SelectField;\nexport const TextField = ({\n  field,\n  label,\n  placeholder\n}) => /*#__PURE__*/_jsxDEV(Form.Field, {\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Field, {\n    placeholder: placeholder,\n    ...field\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red'\n    },\n    children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      name: field.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 3\n}, this);\n/*\r\n  for exercises 9.24.-\r\n*/\n\n_c2 = TextField;\nexport const NumberField = ({\n  field,\n  label,\n  min,\n  max\n}) => /*#__PURE__*/_jsxDEV(Form.Field, {\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Field, { ...field,\n    type: \"number\",\n    min: min,\n    max: max\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'red'\n    },\n    children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      name: field.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 71,\n  columnNumber: 3\n}, this);\n_c3 = NumberField;\nexport const DiagnosisSelection = ({\n  diagnoses,\n  setFieldValue,\n  setFieldTouched\n}) => {\n  const field = \"diagnosisCodes\";\n\n  const onChange = (_event, data) => {\n    setFieldTouched(field, true);\n    setFieldValue(field, data.value);\n  };\n\n  const stateOptions = diagnoses.map(diagnosis => ({\n    key: diagnosis.code,\n    text: `${diagnosis.name} (${diagnosis.code})`,\n    value: diagnosis.code\n  }));\n  return /*#__PURE__*/_jsxDEV(Form.Field, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Diagnoses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      fluid: true,\n      multiple: true,\n      search: true,\n      selection: true,\n      options: stateOptions,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      name: field\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_c4 = DiagnosisSelection;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SelectField\");\n$RefreshReg$(_c2, \"TextField\");\n$RefreshReg$(_c3, \"NumberField\");\n$RefreshReg$(_c4, \"DiagnosisSelection\");","map":{"version":3,"sources":["C:/Users/OlmoLecht/Documents/FullStackWebDev/part9/patientor/src/AddPatientModal/FormField.tsx"],"names":["React","ErrorMessage","Field","Dropdown","Form","SelectField","name","label","options","map","option","value","TextField","field","placeholder","color","NumberField","min","max","DiagnosisSelection","diagnoses","setFieldValue","setFieldTouched","onChange","_event","data","stateOptions","diagnosis","key","code","text"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { ErrorMessage, Field, FieldProps, FormikProps } from \"formik\";\r\nimport { Dropdown, DropdownProps, Form } from \"semantic-ui-react\";\r\nimport { Diagnosis, Gender } from \"../types\";\r\n\r\n// structure of a single option\r\nexport type GenderOption = {\r\n  value: Gender;\r\n  label: string;\r\n};\r\n\r\nexport type TypeOption = {\r\n  value: string;\r\n  label: string;\r\n};\r\n\r\n// props for select field component\r\ntype SelectFieldProps = {\r\n  name: string;\r\n  label: string;\r\n  options: GenderOption[];\r\n};\r\n\r\nexport const SelectField = ({\r\n  name,\r\n  label,\r\n  options\r\n}: SelectFieldProps) => (\r\n  <Form.Field>\r\n    <label>{label}</label>\r\n    <Field as=\"select\" name={name} className=\"ui dropdown\">\r\n      {options.map(option => (\r\n        <option key={option.value} value={option.value}>\r\n          {option.label || option.value}\r\n        </option>\r\n      ))}\r\n    </Field>\r\n  </Form.Field>\r\n);\r\n\r\ninterface TextProps extends FieldProps {\r\n  label: string;\r\n  placeholder: string;\r\n}\r\n\r\nexport const TextField= ({\r\n  field,\r\n  label,\r\n  placeholder\r\n}: TextProps) => (\r\n  <Form.Field>\r\n    <label>{label}</label>\r\n    <Field placeholder={placeholder} {...field} />\r\n    <div style={{ color:'red' }}>\r\n      <ErrorMessage name={field.name} />\r\n    </div>\r\n  </Form.Field>\r\n);\r\n\r\n/*\r\n  for exercises 9.24.-\r\n*/\r\ninterface NumberProps extends FieldProps {\r\n  label: string;\r\n  errorMessage?: string;\r\n  min: number;\r\n  max: number;\r\n}\r\n\r\nexport const NumberField = ({ field, label, min, max } : NumberProps ) => (\r\n  <Form.Field>\r\n    <label>{label}</label>\r\n    <Field {...field} type='number' min={min} max={max} />\r\n\r\n    <div style={{ color:'red' }}>\r\n      <ErrorMessage name={field.name} />\r\n    </div>\r\n  </Form.Field>\r\n);\r\n\r\nexport const DiagnosisSelection = ({\r\n  diagnoses,\r\n  setFieldValue,\r\n  setFieldTouched\r\n}: {\r\n  diagnoses: Diagnosis[];\r\n  setFieldValue: FormikProps<{ diagnosisCodes: string[] }>[\"setFieldValue\"];\r\n  setFieldTouched: FormikProps<{ diagnosisCodes: string[] }>[\"setFieldTouched\"];\r\n}) => {\r\n  const field = \"diagnosisCodes\";\r\n  const onChange = (\r\n    _event: React.SyntheticEvent<HTMLElement, Event>,\r\n    data: DropdownProps\r\n  ) => {\r\n    setFieldTouched(field, true);\r\n    setFieldValue(field, data.value);\r\n  };\r\n\r\n  const stateOptions = diagnoses.map(diagnosis => ({\r\n    key: diagnosis.code,\r\n    text: `${diagnosis.name} (${diagnosis.code})`,\r\n    value: diagnosis.code\r\n  }));\r\n\r\n  return (\r\n    <Form.Field>\r\n      <label>Diagnoses</label>\r\n      <Dropdown\r\n        fluid\r\n        multiple\r\n        search\r\n        selection\r\n        options={stateOptions}\r\n        onChange={onChange}\r\n      />\r\n      <ErrorMessage name={field} />\r\n    </Form.Field>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}