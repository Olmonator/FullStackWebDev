{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OlmoLecht\\\\Documents\\\\FullStackWebDev\\\\part9\\\\patientor\\\\src\\\\PatientListPage\\\\PatientListing.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport { apiBaseUrl } from \"../constants\";\nimport { useStateValue, setPatient, createPatient } from \"../state\";\nimport AddPatientModal from \"../AddPatientModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PatientListing = () => {\n  _s();\n\n  const [{\n    patient\n  }, dispatch] = useStateValue();\n  const {\n    id\n  } = useParams();\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [error, setError] = React.useState();\n\n  const openModal = () => setModalOpen(true);\n\n  const closeModal = () => {\n    setModalOpen(false);\n    setError(undefined);\n  };\n\n  const submitNewPatient = async values => {\n    try {\n      const {\n        data: newPatient\n      } = await axios.post(`${apiBaseUrl}/patients`, values);\n      dispatch(createPatient(newPatient));\n      closeModal();\n    } catch (e) {\n      var _e$response, _e$response2, _e$response2$data;\n\n      console.error(((_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.data) || 'Unknown Error');\n      setError(((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.error) || 'Unknown error');\n    }\n  };\n\n  if (!patient || patient.id !== id) {\n    console.log('fetching patient data');\n    React.useEffect(() => {\n      const fetchPatient = async () => {\n        try {\n          const {\n            data: patientFromApi\n          } = await axios.get(`${apiBaseUrl}/patients/${id}`);\n          dispatch(setPatient(patientFromApi));\n        } catch (e) {\n          console.error(e);\n        }\n      };\n\n      void fetchPatient();\n    }, [dispatch]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        loading: true,\n        name: \"spinner\",\n        size: \"big\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [patient.name, patient.gender === 'male' ? /*#__PURE__*/_jsxDEV(Icon, {\n        name: \"mars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 38\n      }, this) : null, patient.gender === 'female' ? /*#__PURE__*/_jsxDEV(Icon, {\n        name: \"venus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 40\n      }, this) : null, patient.gender === 'other' ? /*#__PURE__*/_jsxDEV(Icon, {\n        name: \"transgender alternate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 39\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPatientModal, {\n      modalOpen: modalOpen,\n      onSubmit: submitNewPatient,\n      error: error,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => openModal(),\n      children: \"Add New Patient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PatientListing, \"mzMxgwDmg7FguokMB1tvLw+SCes=\", false, function () {\n  return [useStateValue, useParams];\n});\n\n_c = PatientListing;\nexport default PatientListing;\n\nvar _c;\n\n$RefreshReg$(_c, \"PatientListing\");","map":{"version":3,"sources":["C:/Users/OlmoLecht/Documents/FullStackWebDev/part9/patientor/src/PatientListPage/PatientListing.tsx"],"names":["axios","React","useParams","Button","Icon","apiBaseUrl","useStateValue","setPatient","createPatient","AddPatientModal","PatientListing","patient","dispatch","id","modalOpen","setModalOpen","useState","error","setError","openModal","closeModal","undefined","submitNewPatient","values","data","newPatient","post","e","console","response","log","useEffect","fetchPatient","patientFromApi","get","name","gender"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { apiBaseUrl } from \"../constants\";\r\nimport { useStateValue, setPatient, createPatient } from \"../state\";\r\nimport { Patient } from \"../types\";\r\n\r\nimport { PatientFormValues } from \"../AddPatientModal/AddPatientForm\";\r\nimport AddPatientModal from \"../AddPatientModal\";\r\n\r\nconst PatientListing = (): JSX.Element => {\r\n  const [{ patient }, dispatch] = useStateValue();\r\n  const { id } = useParams<{ id: string }>(); \r\n\r\n  const [modalOpen, setModalOpen] = React.useState<boolean>(false);\r\n  const [error, setError] = React.useState<string | undefined>();\r\n\r\n  const openModal = (): void => setModalOpen(true);\r\n\r\n  const closeModal = (): void => {\r\n    setModalOpen(false);\r\n    setError(undefined);\r\n  };\r\n\r\n  const submitNewPatient = async (values: PatientFormValues) => {\r\n    try {\r\n      const { data: newPatient } = await axios.post<Patient>(\r\n        `${apiBaseUrl}/patients`,\r\n        values\r\n      );\r\n      dispatch(createPatient(newPatient));\r\n      closeModal();\r\n    } catch (e) {\r\n      console.error(e.response?.data || 'Unknown Error');\r\n      setError(e.response?.data?.error || 'Unknown error');\r\n    }\r\n  };\r\n\r\n  if (!patient || patient.id !== id) {\r\n    console.log('fetching patient data');\r\n    React.useEffect(() => {\r\n      const fetchPatient = async () => {\r\n        try {\r\n          const { data: patientFromApi } = await axios.get<Patient>(\r\n            `${apiBaseUrl}/patients/${id}`\r\n          );\r\n          dispatch(setPatient(patientFromApi));\r\n        } catch (e) {\r\n          console.error(e);\r\n        }\r\n      };\r\n      void fetchPatient();\r\n    }, [dispatch]); \r\n    return (\r\n      <div>\r\n        <Icon loading name='spinner' size='big' />\r\n      </div>\r\n    );\r\n  }\r\n   \r\n  return (\r\n    <div>\r\n      <h2>\r\n        {patient.name} \r\n        \r\n        {patient.gender === 'male' ? <Icon name='mars' /> : null}\r\n        {patient.gender === 'female' ? <Icon name='venus' /> : null}\r\n        {patient.gender === 'other' ? <Icon name='transgender alternate' /> : null}\r\n      </h2>\r\n      \r\n      \r\n      <AddPatientModal\r\n        modalOpen={modalOpen}\r\n        onSubmit={submitNewPatient}\r\n        error={error}\r\n        onClose={closeModal}\r\n      />\r\n      <Button onClick={() => openModal()}>Add New Patient</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientListing;"]},"metadata":{},"sourceType":"module"}